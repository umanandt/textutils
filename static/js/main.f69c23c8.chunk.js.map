{"version":3,"sources":["Component/TextForm.js","Component/Navbar.js","Component/ALert.js","App.js","reportWebVitals.js","index.js"],"names":["emailText","Navbar","props","className","mode","style","backgroundColor","color","href","title","type","id","value","onClick","pallete","toggleMode","htmlFor","TextForm","useState","text","setText","getEmaill","heading","rows","placeholder","onChange","e","target","newText","toUpperCase","showAlert","toLowerCase","emailPattern","stringg","split","i","length","match","lowerString","slice","join","document","getElementById","select","navigator","clipboard","writeText","replace","shift","defaultProps","aboutText","ALert","alert","role","word","lower","charAt","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f69c23c8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet emailText;\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [emaill, getEmaill] = useState(\"\");\r\n\r\n  const onChangeHandle = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const changeUppercase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"Success\");\r\n  };\r\n\r\n  const changeLowercase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"Success\");\r\n  };\r\n\r\n  const clearEverything = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const removeExtraSpace = () => {\r\n    let regexPatterToRemoveSpaces = /[\\s/g]/;\r\n    text.replace(regexPatterToRemoveSpaces);\r\n    props.showAlert(\"Removed Extra Spaces\", \"Success\");\r\n  };\r\n\r\n  const copyText = () => {\r\n    let textt = document.getElementById(\"myArea\");\r\n    textt.select();\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied Content\", \"Success\");\r\n  };\r\n\r\n  const extractEmaill = () => {\r\n    let emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    let stringg = text.split(\" \");\r\n    for (let i = 0; i < text.split(\" \").length; i++) {\r\n      if (stringg[i].match(emailPattern)) {\r\n        emailText = stringg[i];\r\n        getEmaill(emailText);\r\n        props.showAlert(\"Found Email\", \"Success\");\r\n      } else {\r\n        emailText = \"No email\";\r\n        getEmaill(emailText);\r\n        \r\n      }\r\n    }\r\n  };\r\n\r\n  const titleCase = () => {\r\n    let chnageLower = text.toLowerCase();\r\n    let lowerString = chnageLower.split(\" \");\r\n    for (let i = 0; i < lowerString.length; i++) {\r\n      //    console.log(lowerString[i]);\r\n      lowerString[i] =\r\n        lowerString[i][0].toUpperCase() + lowerString[i].slice(1);\r\n      //  console.log(lowerString[i][0].toUpperCase());\r\n      //  console.log(lowerString[i].slice(1));\r\n    }\r\n    setText(lowerString.join(\" \"));\r\n  };\r\n  // function - extra space and copy text\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{color: props.mode === 'light' ? 'white':'black'}}\r\n        >\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            <h1> {props.heading} </h1>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n                        color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n            id=\"myArea\"\r\n            rows=\"6\"\r\n            placeholder=\"Enter Text Here\"\r\n            onChange={onChangeHandle}\r\n            value={text}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={changeUppercase}\r\n       \r\n        >\r\n          Convert to UPPERCASE\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={changeLowercase}>\r\n          Convert to lowercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={clearEverything}>\r\n          Clear Eveything\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={extractEmaill}>\r\n          Extract Email\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={titleCase}>\r\n          Title Case\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={copyText}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={removeExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === 'dark' ? 'white' : 'black'}}\r\n        style={{ color: props.mode === \"#339933\" ? \"white\" : \"black\"}}\r\n        >\r\n        <h1> Your Text Summary </h1>\r\n        <p>\r\n          Number of Words{\" \"}\r\n          {text ? text.split(\" \").length : text.split(\" \").shift()} & Number of\r\n          Character {text.length}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          Time you take to read :--{\" \"}\r\n          {text ? 0.008 * text.split(\" \").length : \"None\"}\r\n        </p>\r\n        <h3>Preview Text</h3>\r\n        <p>{text}</p>\r\n        <p>Extracted Email is: {emailText}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={` navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`} \r\n    >\r\n      <div className=\"container-fluid\" style={{ backgroundColor: props.mode === '#339933' ? 'black' : 'white', color: props.mode === \"#339933\" ? \"white\" : \"black\",\r\n      color: props.mode === \"dark\" ? \"white\" : \"black\"}} >\r\n        <a\r\n          className=\"navbar-brand\"\r\n          href=\"/\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}    \r\n          style ={{color: props.mode === \"#339933\" ? \"white\" : \"black\"}}    \r\n        >\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link active\"\r\n                aria-current=\"page\"\r\n                href=\"#\"\r\n                style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n               style={{ color: props.mode === \"#339933\" ? \"white\" : \"black\"}}\r\n              >\r\n                Home\r\n              </a>\r\n            </li>\r\n           { /* <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link\"\r\n                href=\"#\"\r\n                style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n                style={{ color: props.mode === \"#339933\" ? \"white\" : \"black\"}}\r\n              >\r\n                {props.aboutText}\r\n              </a>\r\n            </li>*/}\r\n          </ul>\r\n\r\n          <div\r\n            className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"inlineCheckbox1\"\r\n              value=\"option1\"\r\n              style={{backgroundColor: '#339933'}}\r\n              onClick={props.pallete}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`form-check form-switch text=${\r\n              props.mode === \"dark\" ? \"white\" : \"black\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              style ={{color: props.mode === \"#339933\" ? \"white\" : \"black\"}}\r\n               >\r\n              Switch to different Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n/*Navbar.defaultProps ={\r\n    title: 'Set title here',\r\n    aboutText: 'About Text here'\r\n};*/\r\n\r\nNavbar.defaultProps = {\r\n  aboutText: \"About US\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nfunction ALert(props) {\r\n \r\n\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n\r\n  return (\r\n    props.alert && \r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong> {capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ALert;\r\n","import \"./App.css\";\nimport Navbar from \"./Component/Navbar\";\nimport TextForm from \"./Component/TextForm\";\nimport React, { useState } from \"react\";\nimport ALert from \"./Component/ALert\";\n//import About from \"./Component/About\";\n//import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(function () {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const pallete = () => {\n    if (mode === \"light\" || mode === \"dark\") {\n      setMode(\"#339933\");\n      document.body.style.backgroundColor = \"#339933\";\n    }\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\" || mode === \"#339933\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n    {/* <Router>*/}\n      <Navbar\n        title=\"TextUtils\"\n        mode={mode}\n        toggleMode={toggleMode}\n        pallete={pallete}\n      />\n      <ALert alert={alert} />\n      <div className=\"container my-3\">\n      { /* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/\">*/}\n            <TextForm\n              showAlert={showAlert}\n              heading=\"Enter Text And See The Magic\"\n            />\n          {/*</Route>\n        </Switch>*/}\n      </div>\n   {/* </Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}